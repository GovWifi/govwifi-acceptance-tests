version: '3.8'

services:
  govwifi-sessions-db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_DATABASE: govwifi_local
    volumes:
      - ./init_sessions_db:/docker-entrypoint-initdb.d
    healthcheck:
      test: "mysql --user=root --password=testpassword -e 'SELECT 1'"

  govwifi-user-details-db:
    image: mysql:8.0
    command: "--default-authentication-plugin=mysql_native_password"
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_DATABASE: govwifi_local
    volumes:
      - ./init_user_details_db:/docker-entrypoint-initdb.d
    healthcheck:
      test: "mysql --user=root --password=testpassword -e 'SELECT 1'"

  govwifi-fake-s3:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-1
      - AWS_ACCESS_KEY_ID=testkey
      - AWS_SECRET_ACCESS_KEY=testsecret
    healthcheck:
      test: "[ $$(AWS_ACCESS_KEY_ID=fake AWS_SECRET_ACCESS_KEY=fake aws --endpoint-url=http://localhost:4566 s3 ls certs-bucket | wc -l) -gt 2 ]"
    volumes:
      - ./fake-s3:/var/lib/localstack
      - ./fake-s3/localstack-init:/etc/localstack/init/ready.d

  govwifi-frontend-local:
    build:
      context: .frontend
    depends_on:
      - govwifi-logging-api-local
      - govwifi-authentication-api-local
    healthcheck:
      test: "[ $$(curl --write-out '%{http_code}' --silent --output /dev/null 127.0.0.1:3000) -eq 200 ]"
      interval: 10s
      retries: 30
    environment:
      AUTHORISATION_API_BASE_URL: "http://govwifi-authentication-api-local:8080"
      LOGGING_API_BASE_URL: "http://govwifi-logging-api-local:8080"
      RADIUS_CONFIG_ALLOWLIST_URL: "http://govwifi-fake-s3:4566/clients.conf"
      HEALTH_CHECK_RADIUS_KEY: RrPTmh8s9NZFenAFx2kG
      HEALTH_CHECK_SSID: GovWifi
      HEALTH_CHECK_IDENTITY: DSLPR
      HEALTH_CHECK_PASSWORD: SharpRegainDetailed
      RADIUSD_PARAMS: "-X"
    volumes:
      - raddb-certs:/etc/raddb/certs

  govwifi-frontend-raddb-local:
    build:
      context: .frontend
      dockerfile: Dockerfile.raddb
    depends_on:
      govwifi-fake-s3:
        condition: service_healthy
    environment:
      AWS_DEFAULT_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: testkey
      AWS_SECRET_ACCESS_KEY: testsecret
      ALLOWLIST_BUCKET: s3://allowlist-bucket
      CERT_STORE_BUCKET: s3://certs-bucket
      TRUSTED_CERTIFICATES_KEY: trusted-certificates/certificates.zip
      ENDPOINT_URL: "http://govwifi-fake-s3:4566"
    volumes:
      - raddb-certs:/etc/raddb/certs

  govwifi-authentication-api-local:
    build:
      context: .authentication-api
      args:
        BUNDLE_INSTALL_CMD: bundle install --without test --no-cache --jobs 8
    environment:
      APP_ENV: production
      DB_HOSTNAME: govwifi-user-details-db
      DB_USER: root
      DB_PASS: testpassword
      DB_NAME: govwifi_local
    depends_on:
      govwifi-sessions-db:
        condition: service_healthy
      govwifi-user-details-db:
        condition: service_healthy

  govwifi-logging-api-local:
    ports:
      - "8080:8080"
    build:
      context: .logging-api
      args:
        BUNDLE_INSTALL_CMD: bundle install --without test, vscodedev --no-cache --jobs 1 --retry 5
    environment:
      APP_ENV: production
      DB_HOSTNAME: govwifi-sessions-db
      DB_USER: root
      DB_PASS: testpassword
      DB_NAME: govwifi_local
      USER_DB_NAME: govwifi_local
      USER_DB_PASS: testpassword
      USER_DB_USER: root
      USER_DB_HOSTNAME: govwifi-user-details-db
    depends_on:
      govwifi-sessions-db:
        condition: service_healthy
      govwifi-user-details-db:
        condition: service_healthy

  govwifi-test:
    build:
      context: acceptance_tests
    depends_on:
      govwifi-frontend-local:
        condition: service_healthy
    environment:
      DB_HOSTNAME: govwifi-sessions-db
      DB_NAME: govwifi_local
      DB_USER: root
      DB_PASS: testpassword
      USER_DB_NAME: govwifi_local
      USER_DB_PASS: testpassword
      USER_DB_USER: root
      USER_DB_HOSTNAME: govwifi-user-details-db
      FRONTEND_CONTAINER: govwifi-frontend-local
      RADIUS_KEY: testingradiussecret
      AWS_DEFAULT_REGION: eu-west-1
      AWS_ACCESS_KEY_ID: testkey
      AWS_SECRET_ACCESS_KEY: testsecret
      CERT_STORE_BUCKET: s3://certs-bucket
      ENDPOINT_URL: "http://govwifi-fake-s3:4566"

volumes:
  raddb-certs:
